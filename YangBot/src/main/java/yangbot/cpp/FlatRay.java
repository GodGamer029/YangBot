// automatically generated by the FlatBuffers compiler, do not modify

package yangbot.cpp;

import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.Struct;

import java.nio.ByteBuffer;

@SuppressWarnings("unused")
public final class FlatRay extends Struct {
    public static int createFlatRay(FlatBufferBuilder builder, float start_x, float start_y, float start_z, float direction_x, float direction_y, float direction_z) {
        builder.prep(4, 24);
        builder.prep(4, 12);
        builder.putFloat(direction_z);
        builder.putFloat(direction_y);
        builder.putFloat(direction_x);
        builder.prep(4, 12);
        builder.putFloat(start_z);
        builder.putFloat(start_y);
        builder.putFloat(start_x);
        return builder.offset();
    }

    public void __init(int _i, ByteBuffer _bb) {
        bb_pos = _i;
        bb = _bb;
    }

    public FlatRay __assign(int _i, ByteBuffer _bb) {
        __init(_i, _bb);
        return this;
    }

    public FlatVec3 start() {
        return start(new FlatVec3());
    }

    public FlatVec3 start(FlatVec3 obj) {
        return obj.__assign(bb_pos + 0, bb);
    }

    public FlatVec3 direction() {
        return direction(new FlatVec3());
    }

    public FlatVec3 direction(FlatVec3 obj) {
        return obj.__assign(bb_pos + 12, bb);
    }
}

